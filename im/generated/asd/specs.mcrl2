sort MessageType = Nat;
sort Pid = Nat;
act
 sendMessage, receiveMessage, networkReceiveMessage, networkSendMessage, outgoingMessage, incomingMessage: Nat # Nat # MessageType;
proc
 User(pid: Pid) = 
  (sum server : Pid . sum m : MessageType . receiveMessage(pid, m, server) .
   (m == 1) -> (
     sendMessage(pid, server, 2)
     +
     sendMessage(pid, server, 3)
   )
  ) .
  User();
 Mach(user: Pid, pid: Pid) = 
  sendMessage(pid, user, 1)
  .
  (sum m : MessageType . receiveMessage(pid, m, user) .
   (m == 2) -> (
    sendMessage(pid, user, 3)
   )
   +
   (m == 3) -> (
    sendMessage(pid, user, 4)
   )
  ) .
  Mach();
 Network = sum msg, p1, p2: Nat . networkReceiveMessage(p1, p2, msg) . networkSendMessage(p2, p1, msg) . Network() ;
init
 allow({outgoingMessage, incomingMessage},
  comm({sendMessage|networkReceiveMessage -> outgoingMessage, networkSendMessage|receiveMessage -> incomingMessage},
  User(8677) || Mach(9751, 8677) || Network
));
